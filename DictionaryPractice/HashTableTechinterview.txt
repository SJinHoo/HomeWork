
해싱은 임의의 크기를 가진 데이터를 고정된 크기의 값으로 매핑하는 과정을 말합니다.
이 매핑 과정에서 사용하게 되는 함수를 해시 함수라고 합니다.

해싱을 사용하면 데이터를 빠르게 저장,검색 및 정렬을 할 수 있습니다.
해시함수는 입력에 대한 함수의 결과가 항상 동일한 값이어야 합니다.
해시 함수는 빠르게 연산 할 수 있어야 효율이 좋으며 결과에 대한 밀집도가 낮아야합니다.
해시테이블의 크기가 클수록 빠르지만 메모리가 부담이 됩니다.

하지만 모든경우의 데이터를 해시값으로 매핑하는 것은 불가능 하며 해시 함수가 서로 다른 데이터에 대해 동일한 해시값을 생성할 수 있는 충돌을 피할 수 없습니다.
충돌이 일어나게 되면 해시테이블의 성능을 저하시키는 요인이 됩니다.

해시충돌이 발생하면 해시 테이블에서 해당위치에 다른 데이터가 저장되어있는 경우가 있습니다.
이런 경우 충돌이 해결되지않으면 데이터를 찾을 수 없는 상태가 됩니다.
이러한 충돌을 해결 방법에는 선형조사(Linear probing),이중 해싱(Double hashing),체이닝(Chaining) 등이 있습니다.

선형조사는 충돌이 발생한 위치로부터 일정한 간격만큼 떨어진곳에 빈 공간이 있는지 검색하는 방법입니다.
이중 해싱은 충돌이 발생한 위치에 다른 해시함수를 적용하여 빈 공간을 찾는 방법입니다. + 제곱탐색
위 두가지는 개방(열린)주소법의 해결방안이며

체이닝은 충돌이 발생하면 하나의 해시버킷에 여러개의 데이터를 연결리스트 형태로 저장하는 방법입니다.

<해시테이블의 시간복잡도>
접근			탐색			삽입			삭제
X			O(1)		O(1)		O(1)


힙 정렬 기술면접 준비 ( 힙, 추가, 삭제, 완전 이진트리 배열)

오늘 배운 힙은 프로그래밍 언어에서 흔히 말하는 Heap 영역의 메모리 구조의 Heap이 아닌 힙 순서의 속성 (Heap Order Property)을 만족하는 완전 이진트리 입니다.

완전 이진트리는 최고 깊이를 제외한 모든 깊이의 노드들이 완전히 채워져 있는 형태의 이진트리 입니다.

힙의 노드들은 자식노드들이 부모노드보다 반드시 커야만 조건이 만족 됩니다.

힙은 두 가지의 연산만 가지고 있습니다.

첫 번째, 새 노드를 삽입
두 번째, 최소값의 노드 삭제

새 노드를 삽입하는 과정
1. 힙의 최고 깊이, 최 우측에 노드를 추가 but 완전 이진트리는 반드시 유지되어야함
2. 삽입한 노드를 부모노드와 비교, 삽입한 노드가 부모노드 값보다 크면 연산 종료
3. 삽입한 노드가 부모노드의 값보다 작으면 부모의 노드와 위치를 바꿉니다.

최소값의 노드 삭제하는 과정	(힙에서 최소값은 루트 노드를 삭제한다는 것과 같음)

1. 힙의 최고 깊이, 최 우측에 있는 노드를 루트노드(최소값의 노드)로 옮겨옵니다. 이때 힙의 순서 속성이 파괴됨
2. 옮겨온 노드의 양쪽 자식과 비교하여 작은 쪽 자식과 위치교환.( 힙속성이 지켜지려면 부모노드는 양쪽 자식노드보다 작은 값을 가져야하기 때문)
3. 옮겨온 노드가 더 이상 자식이 없는 노드가 되거나 양쪽 자식보다 작은 값을 갖는 경우 삭제연산을 종료, 그렇지 않으면 2단계를 반복





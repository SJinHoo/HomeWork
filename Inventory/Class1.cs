using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace Inventory
{
    internal class Class1
    {/*
        배열, 선형리스트 텍스트파일 작성

        갖춰야할 덕목

        1. 기본 개념이해 : 배열과 선형 목록의 차이점, 용도, 장단점등 기본 개념을 설명할 줄 알아야함

        2. 구현 지식: 요소 생성, 초기화 및 액세스 방법을 포함하여 C#에서 배열 및 선형 목록을 구현하는 방법을 잘 이해해야함

        3. 알고리즘 및 연산에 대한 지식 : 요소 검색, 정렬, 삽입 및 삭제와 같은 배열 및 선형 목록과 관련된 일반적인 알고리즘 및 연산에 대한 지식을 설명하고 입증할 수 있어야함

        4. 성능 고려사항 : 응시자는 시간 및 공간 복잡성과 같은 배열 및 선형 목록 사용과 관련된 성능 고려사항과 특정 사용 사례에 대한 성능 최적화 방법을 알고 있어야함

        5. 오류처리 : 범위를 벗어난 인덱스 오류, null 참조 예외 및 메모리 할당 오류와 같은 배열 및 선형 목록과 관련된 일반적인 오류 및 예외를 처리할 수 있어야함.


        배열

        배열은 메모리에 순차적으로 저장되는 동일한 데이터 유형 요소의 고정된 크기 모음
        배열의 요소는 index 위치(0부터시작)로 엑세스 할 수 있음
        배열의 크기는 고정되어있어 배열의 크기는 일단 생성되면 변경 할 수 없음
        배열을 선언하고 초기화 하려면 아래 구문을 사용할 수 있음*/
        int[] array = new int[5];
        string[] champion = { "다리우스", "리 신", "레넥톤" };

        /*
        선형리스트

        연결목록이라고도 하며 선형목록은 메모리에 비 순차적으로 저장되는 요소들의 모음
        노드라고도 하는 선형 목록의 각 요소에는 값과 목록의 다음 요소에 대한 참조가 포함됨
        선형 목록의 요소는 노드간의 참조를 따라 엑세스 됩니다. 선형목록에는 가변크기가 있음
        즉, 동적으로 추가하거나 제거가 가능합니다.
        C#에서 선형목록을 선언하고 초기화 하려면 아래와 같은구문을 사용할 수 있습니다.
        */

        List<int> myLinkedlist = new List<int>();

        /*
        정리하자면 배열과 선형 목록 모두 데이터 컬렉션을 저장하는데 사용되는 C#의 중요한 데이터 구조입니다.
        배열은 메모리에 순차적으로 저장되는 고정된 크기의 요소 모음인 반면
        선형리스트는 메모리에 비 순차적으로 저장되는 동적요소의 모음입니다.
        두 데이터의 구조 모두 고유한 장,단점이 있으며 사용할 프로그램의 요구에 따라 유동적으로 선택해야하겠습니다.
         */

        
     
    }
}

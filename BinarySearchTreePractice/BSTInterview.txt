이진탐색트리 한계점과 극복방법 조사

이진 탐색트리는 노드들이 한 쪽 자식노드 쪽으로만 추가되는 불균형이 발생 가능하여 이 경우 탐색영역이 줄어들지않고 계속해서 늘어나기 때문에 시간복잡도가 늘어나게 됩니다.
이러한 현상을 막기 위해서 자가균형기능을 추가한 트리의 사용을 필요로 하게됩니다.
대표적인 자가 균형 이진 탐색 트리 방식으로 Red - Black Tree, AVL Tree 등이 있습니다.

Red - Black Tree

레드 블랙 트리는 자료의 삽입과 삭제, 검색에서 최악의 경우에도 일정한 시간을 보장해주어 실시간 처리와 같은 실행시간이 중요한 경우에 유용하게 쓰입니다.
또한, 일정한 시간을 보장하는 또 다른 자료구조를 만드는 데에도 쓸모가 있습니다. 예) 각종 기하학 계산에 많이 쓰이는 자료구조들이 전부 레드-블랙 트리 기반으로 만들어져 있습니다.

레드 블랙 트리는 다음과 같은 규칙을 충족해야 합니다.
1.노드는 레드 혹은 블랙 중의 하나이다.
2.루트 노드는 블랙이다.
3.모든 리프 노드들(NIL)은 블랙이다.
4.레드 노드의 자식노드 양쪽은 언제나 모두 블랙이다. (즉, 레드 노드는 연달아 나타날 수 없으며, 블랙 노드만이 레드 노드의 부모 노드가 될 수 있다)
5.어떤 노드로부터 시작되어 그에 속한 하위 리프 노드에 도달하는 모든 경로에는 리프 노드를 제외하면 모두 같은 개수의 블랙 노드가 있다.

(자세한 내용 이미지 파일 참조)

AVL Tree

AVL 트리는 시간복잡도 O(logN)에 탐색 가능하며 다음과 같은 특징을 가집니다.

1. 이진탐색트리의 속성을 가진다.
2. 왼쪽, 오른쪽 서브트리의 높이 차이가 최대 1이다.
3. 높이 차이가 1보다 커지면 회전(Rotation)을 통해 맞춰 높이 차이를 줄인다.
4. 삽입,검색,삭제의 시간 복잡도가 O(logN)이다. (N은 노드의 갯수)

AVL 트리가 어떻게 균형을 잡는지에 대한 회전 과정 ↓ 아래 링크 들어가서 확인해보기

https://code-lab1.tistory.com/61 링크 참조 ( 우회전, 좌회전, LL, LR, RL) 시간적 여유있을때 Data structure visualization 검색

이진탐색트리의 순회방법 조사와 순회순서

이진탐색트리의 순회방법은 총 3가지로 나뉩니다.

1. 중위순회	: 왼쪽 서브트리(왼쪽자식노드) > 루트 노드 > 오른쪽 서브트리(오른쪽 자식노드)

2. 전위 순회	: 루트노드 > 왼쪽 서브트리(왼쪽자식노드) > 오른쪽 서브트리(오른쪽 자식노드)

3. 후위 순회	: 오른쪽 서브트리 (오른쪽 자식노드)> 루트노드 > 왼쪽 서브트리(왼쪽 자식노드)

순회 순서는 위와 같으며 각각의 순회 방법은 방법들간의 특징이 존재합니다.
중위 순회는 이진탐색트리에서 정렬된 순서로 노드를 출력 할 때 사용되며
전위 순회는 트리를 복원하는데에 유용하게 사용됩니다.
후위 순회는 주로 노드를 삭제할 때 많이 사용되며, 가장 최하위 노드 즉, leaf 노드부터 차례대로 삭제해 나가는 것이 편리합니다.